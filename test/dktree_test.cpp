#include <gtest/gtest.h>
#include "../include/dktree/DKtree.hpp"
#include <iostream>
#include "sdsl/k2_tree.hpp"

using d_tree = dynamic_ktree::DKtree<2, bit_vector>;
using k_tree = sdsl::k2_tree<2>;

TEST(dktreeCreate, createEmpty) {
    d_tree tree(2);
    ASSERT_EQ(tree.get_number_edges(), 0);
}


TEST(dktreeAddLink, addLink0) {
    d_tree tree(2);
    tree.add_edge(0, 1);

    ASSERT_EQ(tree.get_number_edges(), 1);
}

TEST(dktreeAddLink, addLink) {
    d_tree tree(5);
    tree.add_edge(1, 2);
    tree.add_edge(1, 4);
    tree.add_edge(3, 0);
    tree.add_edge(1, 3);
    ASSERT_EQ(tree.get_number_edges(), 4);
}

TEST(dktreeAddLink, addSameLink) {
    d_tree tree(6);
    tree.add_edge(1, 2);
    tree.add_edge(1, 2);

    ASSERT_EQ(tree.get_number_edges(), 1);
}

TEST(dktreeContains, containsInC0) {
    d_tree tree(6);
    tree.add_edge(1, 2);

    ASSERT_TRUE(tree.contains(1, 2));
    ASSERT_FALSE(tree.contains(3, 4));
}

TEST(dktreeContain, containsInCs) {
    d_tree tree(5);
    tree.add_edge(1, 2);
    tree.add_edge(1, 4);
    tree.add_edge(3, 0);
    tree.add_edge(1, 3);

    ASSERT_TRUE(tree.contains(1, 2));
    ASSERT_TRUE(tree.contains(1, 4));
    ASSERT_TRUE(tree.contains(3, 0));
    ASSERT_TRUE(tree.contains(1, 3));
    ASSERT_FALSE(tree.contains(0, 0));
}


TEST(dktreeDelete, deleteItemC0) {
    d_tree tree(5);
    tree.add_edge(1, 2);
    ASSERT_EQ(tree.get_number_edges(), 1);

    tree.del_edge(1, 2);
    ASSERT_EQ(tree.get_number_edges(), 0);
}

TEST(dktreeDelete, deleteItem) {
    d_tree tree(4);
    tree.add_edge(1, 2);
    tree.add_edge(1, 3);
    tree.add_edge(3, 0);
    tree.add_edge(2, 3);
    tree.add_edge(3, 3);
    ASSERT_EQ(tree.get_number_edges(), 5);

    tree.del_edge(3, 3);
    ASSERT_EQ(tree.get_number_edges(), 4);

    tree.del_edge(1, 3);
    ASSERT_EQ(tree.get_number_edges(), 3);

    tree.del_edge(3, 0);
    ASSERT_EQ(tree.get_number_edges(), 2);

    tree.del_edge(1, 2);
    ASSERT_EQ(tree.get_number_edges(), 1);

    tree.del_edge(1, 2);
    ASSERT_EQ(tree.get_number_edges(), 1);

    tree.del_edge(2, 3);
    ASSERT_EQ(tree.get_number_edges(), 0);
}

TEST(dktreeDelete, listNeighbours) {
    d_tree tree(5);
    tree.add_edge(1, 2);
    tree.add_edge(1, 4);
    tree.add_edge(3, 0);
    tree.add_edge(3, 3);

    std::vector<etype> neighbours = tree.list_neighbour(1);
    ASSERT_EQ(neighbours.size(), 2);
    ASSERT_EQ(neighbours[0], 2);
    ASSERT_EQ(neighbours[1], 4);

    neighbours = tree.list_neighbour(3);
    ASSERT_EQ(neighbours.size(), 2);
    ASSERT_EQ(neighbours[0], 0);
    ASSERT_EQ(neighbours[1], 3);
}

TEST(dktreeIterate, edge_iterate_empty) {
    d_tree empty_tree;
    ASSERT_TRUE(empty_tree.edge_begin() == empty_tree.edge_end());
}

TEST(dktreeIterate, edge_iterate) {
    d_tree tree(10);
    tree.add_edge(1, 2);
    tree.add_edge(1, 4);
    tree.add_edge(3, 1);
    tree.add_edge(3, 4);
    tree.add_edge(3, 9);
    tree.add_edge(5, 0);
    tree.add_edge(5, 1);
    tree.add_edge(6, 0);
    tree.add_edge(7, 0);
    tree.add_edge(9, 0);

    //increment operation
    auto it = tree.edge_begin();
    ASSERT_EQ(it.x(), 7);
    ASSERT_EQ(it.y(), 0);
    it++;
    ASSERT_EQ(it.x(), 9);
    ASSERT_EQ(it.y(), 0);
    it++;
    ASSERT_EQ(it.x(), 1);
    ASSERT_EQ(it.y(), 2);
    it++;
    ASSERT_EQ(it.x(), 1);
    ASSERT_EQ(it.y(), 4);
    it++;
    ASSERT_EQ(it.x(), 3);
    ASSERT_EQ(it.y(), 1);
    it++;
    ASSERT_EQ(it.x(), 3);
    ASSERT_EQ(it.y(), 4);
    it++;
    ASSERT_EQ(it.x(), 3);
    ASSERT_EQ(it.y(), 9);
    it++;
    ASSERT_EQ(it.x(), 5);
    ASSERT_EQ(it.y(), 0);
    it++;
    ASSERT_EQ(it.x(), 5);
    ASSERT_EQ(it.y(), 1);
    it++;
    ASSERT_EQ(it.x(), 6);
    ASSERT_EQ(it.y(), 0);

    it++;
    ASSERT_TRUE(it == tree.edge_end());
    it++;
    ASSERT_TRUE(it == tree.edge_end());

    auto a = tree.edge_begin();
    auto b = tree.edge_end();

    // SWAP operation
    swap(a, b);
    ASSERT_EQ(a, tree.edge_end());
    ASSERT_EQ(b, tree.edge_begin());
}

TEST(dktreeIterate, node_empty) {
    d_tree tree;
    ASSERT_EQ(*tree.node_begin(), *tree.node_end());
}

TEST(dktreeIterate, node_iterate) {
    d_tree tree(3);
    tree.add_edge(1, 2);
    tree.add_edge(1, 0);

    auto node_it = tree.node_begin();
    ASSERT_EQ(*node_it, 0);
    node_it++;
    ASSERT_EQ(*node_it, 1);
    node_it++;
    ASSERT_EQ(*node_it, 2);
    node_it++;
    ASSERT_EQ(*node_it, *tree.node_end());
    node_it++;
    ASSERT_EQ(*node_it, *tree.node_end());
}

TEST(dktreeIterate, neightbour_iterator) {
    d_tree tree(3);
    tree.add_edge(1, 2);
    tree.add_edge(1, 1);
    tree.add_edge(2, 0);

    auto neighbour_it = tree.neighbour_begin(1);
    ASSERT_EQ(*neighbour_it, 1);
    neighbour_it++;
    ASSERT_EQ(*neighbour_it, 2);
    neighbour_it++;
    ASSERT_EQ(*neighbour_it, *tree.neighbour_end());
    neighbour_it++;
    ASSERT_EQ(*neighbour_it, *tree.neighbour_end());

    neighbour_it = tree.neighbour_begin(2);
    ASSERT_EQ(*neighbour_it, 0);
    neighbour_it++;
    ASSERT_EQ(*neighbour_it, *tree.neighbour_end());

    neighbour_it = tree.neighbour_begin(0);
    ASSERT_EQ(*neighbour_it, *tree.neighbour_end());

}

TEST(dktreeIterate, neighbour_iterator_other) {
    d_tree simple_graph(4);
    simple_graph.add_edge(1, 2);
    simple_graph.add_edge(2, 3);
    simple_graph.add_edge(3, 1);
    simple_graph.add_edge(2, 1);
    simple_graph.add_edge(3, 2);
    simple_graph.add_edge(1, 3);

    auto neighbour_it = simple_graph.neighbour_begin(1);
    ASSERT_EQ(*neighbour_it, 3);
    neighbour_it++;
    ASSERT_EQ(*neighbour_it, 2);
    neighbour_it++;
    ASSERT_EQ(*neighbour_it, *simple_graph.neighbour_end());

    neighbour_it = simple_graph.neighbour_begin(2);
    ASSERT_EQ(*neighbour_it, 1);
    neighbour_it++;
    ASSERT_EQ(*neighbour_it, 3);
    neighbour_it++;
    ASSERT_EQ(*neighbour_it, *simple_graph.neighbour_end());

    neighbour_it = simple_graph.neighbour_begin(3);
    ASSERT_EQ(*neighbour_it, 2);
    neighbour_it++;
    ASSERT_EQ(*neighbour_it, 1);
    neighbour_it++;
    ASSERT_EQ(*neighbour_it, *simple_graph.neighbour_end());
}

TEST(dktreeIterate, neighbour_iterator_star) {
    d_tree star_graph(7);
    star_graph.add_edge(1, 2);
    star_graph.add_edge(1, 3);
    star_graph.add_edge(1, 4);
    star_graph.add_edge(1, 5);
    star_graph.add_edge(1, 6);

    star_graph.add_edge(2, 1);
    star_graph.add_edge(2, 4);

    star_graph.add_edge(3, 1);
    star_graph.add_edge(3, 5);

    star_graph.add_edge(4, 1);
    star_graph.add_edge(4, 2);

    star_graph.add_edge(5, 1);
    star_graph.add_edge(5, 3);
    star_graph.add_edge(5, 6);

    star_graph.add_edge(6, 1);
    star_graph.add_edge(6, 5);

    vector<int> list_neighbours_star;
    for (auto neigh_star_it = star_graph.neighbour_begin(1);
         neigh_star_it != star_graph.neighbour_end(); neigh_star_it++) {
        list_neighbours_star.push_back(*neigh_star_it);
    }

    vector<int> expected_list_neighbour = {2, 3, 4, 5, 6};
    for (int e: expected_list_neighbour) {
        ASSERT_TRUE(std::find(list_neighbours_star.begin(), list_neighbours_star.end(), e)
                    != list_neighbours_star.end());
    }
}

//TEST(dktreeHeavy, test_50000_edges) {
//    d_tree graph(1000);
//
//    graph.add_edge(0, 1);
//    graph.add_edge(1, 0);
//    graph.add_edge(0, 2);
//    graph.add_edge(2, 0);
//    graph.add_edge(2, 3);
//    graph.add_edge(3, 2);
//    graph.add_edge(3, 0);
//    graph.add_edge(0, 3);
//    graph.add_edge(1, 4);
//    graph.add_edge(4, 1);
//    graph.add_edge(4, 0);
//    graph.add_edge(0, 4);
//    graph.add_edge(3, 5);
//    graph.add_edge(5, 3);
//    graph.add_edge(5, 0);
//    graph.add_edge(0, 5);
//    graph.add_edge(4, 6);
//    graph.add_edge(6, 4);
//    graph.add_edge(6, 0);
//    graph.add_edge(0, 6);
//    graph.add_edge(6, 1);
//    graph.add_edge(1, 6);
//    graph.add_edge(2, 7);
//    graph.add_edge(7, 2);
//    graph.add_edge(2, 8);
//    graph.add_edge(8, 2);
//    graph.add_edge(8, 7);
//    graph.add_edge(7, 8);
//    graph.add_edge(8, 3);
//    graph.add_edge(3, 8);
//    graph.add_edge(0, 9);
//    graph.add_edge(9, 0);
//    graph.add_edge(9, 5);
//    graph.add_edge(5, 9);
//    graph.add_edge(9, 4);
//    graph.add_edge(4, 9);
//    graph.add_edge(9, 3);
//    graph.add_edge(3, 9);
//    graph.add_edge(9, 1);
//    graph.add_edge(1, 9);
//    graph.add_edge(5, 10);
//    graph.add_edge(10, 5);
//    graph.add_edge(10, 9);
//    graph.add_edge(9, 10);
//    graph.add_edge(10, 0);
//    graph.add_edge(0, 10);
//    graph.add_edge(10, 3);
//    graph.add_edge(3, 10);
//    graph.add_edge(9, 11);
//    graph.add_edge(11, 9);
//    graph.add_edge(11, 4);
//    graph.add_edge(4, 11);
//    graph.add_edge(11, 5);
//    graph.add_edge(5, 11);
//    graph.add_edge(11, 0);
//    graph.add_edge(0, 11);
//    graph.add_edge(8, 12);
//    graph.add_edge(12, 8);
//    graph.add_edge(12, 7);
//    graph.add_edge(7, 12);
//    graph.add_edge(12, 2);
//    graph.add_edge(2, 12);
//    graph.add_edge(12, 13);
//    graph.add_edge(13, 12);
//    graph.add_edge(13, 2);
//    graph.add_edge(2, 13);
//    graph.add_edge(13, 8);
//    graph.add_edge(8, 13);
//    graph.add_edge(1, 14);
//    graph.add_edge(14, 1);
//    graph.add_edge(14, 9);
//    graph.add_edge(9, 14);
//    graph.add_edge(14, 4);
//    graph.add_edge(4, 14);
//    graph.add_edge(0, 15);
//    graph.add_edge(15, 0);
//    graph.add_edge(15, 10);
//    graph.add_edge(10, 15);
//    graph.add_edge(15, 9);
//    graph.add_edge(9, 15);
//    graph.add_edge(15, 6);
//    graph.add_edge(6, 15);
//    graph.add_edge(11, 16);
//    graph.add_edge(16, 11);
//    graph.add_edge(13, 17);
//    graph.add_edge(17, 13);
//    graph.add_edge(17, 8);
//    graph.add_edge(8, 17);
//    graph.add_edge(17, 12);
//    graph.add_edge(12, 17);
//    graph.add_edge(10, 18);
//    graph.add_edge(18, 10);
//    graph.add_edge(18, 0);
//    graph.add_edge(0, 18);
//    graph.add_edge(18, 9);
//    graph.add_edge(9, 18);
//    graph.add_edge(18, 19);
//    graph.add_edge(19, 18);
//    graph.add_edge(19, 9);
//    graph.add_edge(9, 19);
//    graph.add_edge(11, 20);
//    graph.add_edge(20, 11);
//    graph.add_edge(20, 5);
//    graph.add_edge(5, 20);
//    graph.add_edge(20, 9);
//    graph.add_edge(9, 20);
//    graph.add_edge(9, 21);
//    graph.add_edge(21, 9);
//    graph.add_edge(21, 20);
//    graph.add_edge(20, 21);
//    graph.add_edge(21, 15);
//    graph.add_edge(15, 21);
//    graph.add_edge(21, 10);
//    graph.add_edge(10, 21);
//    graph.add_edge(21, 1);
//    graph.add_edge(1, 21);
//    graph.add_edge(21, 3);
//    graph.add_edge(3, 21);
//    graph.add_edge(21, 5);
//    graph.add_edge(5, 21);
//    graph.add_edge(21, 0);
//    graph.add_edge(0, 21);
//    graph.add_edge(16, 22);
//    graph.add_edge(22, 16);
//    graph.add_edge(21, 23);
//    graph.add_edge(23, 21);
//    graph.add_edge(23, 3);
//    graph.add_edge(3, 23);
//    graph.add_edge(23, 10);
//    graph.add_edge(10, 23);
//    graph.add_edge(23, 15);
//    graph.add_edge(15, 23);
//    graph.add_edge(23, 20);
//    graph.add_edge(20, 23);
//    graph.add_edge(23, 9);
//    graph.add_edge(9, 23);
//    graph.add_edge(6, 24);
//    graph.add_edge(24, 6);
//    graph.add_edge(24, 0);
//    graph.add_edge(0, 24);
//    graph.add_edge(24, 4);
//    graph.add_edge(4, 24);
//    graph.add_edge(5, 25);
//    graph.add_edge(25, 5);
//    graph.add_edge(25, 21);
//    graph.add_edge(21, 25);
//    graph.add_edge(25, 10);
//    graph.add_edge(10, 25);
//    graph.add_edge(25, 3);
//    graph.add_edge(3, 25);
//    graph.add_edge(8, 26);
//    graph.add_edge(26, 8);
//    graph.add_edge(26, 17);
//    graph.add_edge(17, 26);
//    graph.add_edge(26, 13);
//    graph.add_edge(13, 26);
//    graph.add_edge(26, 3);
//    graph.add_edge(3, 26);
//    graph.add_edge(26, 2);
//    graph.add_edge(2, 26);
//    graph.add_edge(23, 27);
//    graph.add_edge(27, 23);
//    graph.add_edge(27, 9);
//    graph.add_edge(9, 27);
//    graph.add_edge(27, 10);
//    graph.add_edge(10, 27);
//    graph.add_edge(27, 3);
//    graph.add_edge(3, 27);
//    graph.add_edge(27, 21);
//    graph.add_edge(21, 27);
//    graph.add_edge(9, 28);
//    graph.add_edge(28, 9);
//    graph.add_edge(28, 21);
//    graph.add_edge(21, 28);
//    graph.add_edge(28, 20);
//    graph.add_edge(20, 28);
//    graph.add_edge(28, 19);
//    graph.add_edge(19, 28);
//    graph.add_edge(28, 18);
//    graph.add_edge(18, 28);
//    graph.add_edge(28, 15);
//    graph.add_edge(15, 28);
//    graph.add_edge(28, 11);
//    graph.add_edge(11, 28);
//    graph.add_edge(28, 1);
//    graph.add_edge(1, 28);
//    graph.add_edge(28, 4);
//    graph.add_edge(4, 28);
//    graph.add_edge(28, 5);
//    graph.add_edge(5, 28);
//    graph.add_edge(1, 29);
//    graph.add_edge(29, 1);
//    graph.add_edge(29, 28);
//    graph.add_edge(28, 29);
//    graph.add_edge(29, 21);
//    graph.add_edge(21, 29);
//    graph.add_edge(29, 9);
//    graph.add_edge(9, 29);
//    graph.add_edge(29, 6);
//    graph.add_edge(6, 29);
//    graph.add_edge(29, 4);
//    graph.add_edge(4, 29);
//    graph.add_edge(29, 0);
//    graph.add_edge(0, 29);
//    graph.add_edge(2, 30);
//    graph.add_edge(30, 2);
//    graph.add_edge(30, 13);
//    graph.add_edge(13, 30);
//    graph.add_edge(30, 7);
//    graph.add_edge(7, 30);
//    graph.add_edge(30, 3);
//    graph.add_edge(3, 30);
//    graph.add_edge(30, 0);
//    graph.add_edge(0, 30);
//    graph.add_edge(8, 31);
//    graph.add_edge(31, 8);
//    graph.add_edge(31, 13);
//    graph.add_edge(13, 31);
//    graph.add_edge(31, 12);
//    graph.add_edge(12, 31);
//    graph.add_edge(28, 32);
//    graph.add_edge(32, 28);
//    graph.add_edge(32, 29);
//    graph.add_edge(29, 32);
//    graph.add_edge(32, 5);
//    graph.add_edge(5, 32);
//    graph.add_edge(32, 1);
//    graph.add_edge(1, 32);
//    graph.add_edge(32, 11);
//    graph.add_edge(11, 32);
//    graph.add_edge(32, 18);
//    graph.add_edge(18, 32);
//    graph.add_edge(32, 21);
//    graph.add_edge(21, 32);
//    graph.add_edge(3, 33);
//    graph.add_edge(33, 3);
//    graph.add_edge(33, 30);
//    graph.add_edge(30, 33);
//    graph.add_edge(33, 27);
//    graph.add_edge(27, 33);
//    graph.add_edge(33, 26);
//    graph.add_edge(26, 33);
//    graph.add_edge(33, 23);
//    graph.add_edge(23, 33);
//    graph.add_edge(33, 2);
//    graph.add_edge(2, 33);
//    graph.add_edge(11, 34);
//    graph.add_edge(34, 11);
//    graph.add_edge(34, 32);
//    graph.add_edge(32, 34);
//    graph.add_edge(34, 4);
//    graph.add_edge(4, 34);
//    graph.add_edge(23, 35);
//    graph.add_edge(35, 23);
//    graph.add_edge(35, 27);
//    graph.add_edge(27, 35);
//    graph.add_edge(35, 9);
//    graph.add_edge(9, 35);
//    graph.add_edge(35, 20);
//    graph.add_edge(20, 35);
//    graph.add_edge(35, 15);
//    graph.add_edge(15, 35);
//    graph.add_edge(35, 10);
//    graph.add_edge(10, 35);
//    graph.add_edge(35, 3);
//    graph.add_edge(3, 35);
//    graph.add_edge(35, 21);
//    graph.add_edge(21, 35);
//    graph.add_edge(14, 36);
//    graph.add_edge(36, 14);
//    graph.add_edge(36, 4);
//    graph.add_edge(4, 36);
//    graph.add_edge(36, 9);
//    graph.add_edge(9, 36);
//    graph.add_edge(13, 37);
//    graph.add_edge(37, 13);
//    graph.add_edge(37, 30);
//    graph.add_edge(30, 37);
//    graph.add_edge(37, 26);
//    graph.add_edge(26, 37);
//    graph.add_edge(37, 17);
//    graph.add_edge(17, 37);
//    graph.add_edge(37, 8);
//    graph.add_edge(8, 37);
//    graph.add_edge(37, 12);
//    graph.add_edge(12, 37);
//    graph.add_edge(22, 38);
//    graph.add_edge(38, 22);
//    graph.add_edge(38, 16);
//    graph.add_edge(16, 38);
//    graph.add_edge(19, 39);
//    graph.add_edge(39, 19);
//    graph.add_edge(39, 28);
//    graph.add_edge(28, 39);
//    graph.add_edge(39, 9);
//    graph.add_edge(9, 39);
//    graph.add_edge(39, 18);
//    graph.add_edge(18, 39);
//    graph.add_edge(28, 40);
//    graph.add_edge(40, 28);
//    graph.add_edge(40, 39);
//    graph.add_edge(39, 40);
//    graph.add_edge(40, 4);
//    graph.add_edge(4, 40);
//    graph.add_edge(40, 11);
//    graph.add_edge(11, 40);
//    graph.add_edge(40, 15);
//    graph.add_edge(15, 40);
//    graph.add_edge(40, 18);
//    graph.add_edge(18, 40);
//    graph.add_edge(40, 19);
//    graph.add_edge(19, 40);
//    graph.add_edge(40, 21);
//    graph.add_edge(21, 40);
//    graph.add_edge(37, 41);
//    graph.add_edge(41, 37);
//    graph.add_edge(41, 8);
//    graph.add_edge(8, 41);
//    graph.add_edge(41, 17);
//    graph.add_edge(17, 41);
//    graph.add_edge(41, 26);
//    graph.add_edge(26, 41);
//    graph.add_edge(41, 13);
//    graph.add_edge(13, 41);
//    graph.add_edge(21, 42);
//    graph.add_edge(42, 21);
//    graph.add_edge(42, 40);
//    graph.add_edge(40, 42);
//    graph.add_edge(42, 35);
//    graph.add_edge(35, 42);
//    graph.add_edge(42, 27);
//    graph.add_edge(27, 42);
//    graph.add_edge(42, 1);
//    graph.add_edge(1, 42);
//    graph.add_edge(42, 10);
//    graph.add_edge(10, 42);
//    graph.add_edge(42, 20);
//    graph.add_edge(20, 42);
//    graph.add_edge(42, 9);
//    graph.add_edge(9, 42);
//    graph.add_edge(31, 43);
//    graph.add_edge(43, 31);
//    graph.add_edge(43, 13);
//    graph.add_edge(13, 43);
//    graph.add_edge(43, 8);
//    graph.add_edge(8, 43);
//    graph.add_edge(15, 44);
//    graph.add_edge(44, 15);
//    graph.add_edge(44, 35);
//    graph.add_edge(35, 44);
//    graph.add_edge(44, 28);
//    graph.add_edge(28, 44);
//    graph.add_edge(44, 23);
//    graph.add_edge(23, 44);
//    graph.add_edge(44, 10);
//    graph.add_edge(10, 44);
//    graph.add_edge(2, 45);
//    graph.add_edge(45, 2);
//    graph.add_edge(45, 33);
//    graph.add_edge(33, 45);
//    graph.add_edge(45, 30);
//    graph.add_edge(30, 45);
//    graph.add_edge(45, 13);
//    graph.add_edge(13, 45);
//    graph.add_edge(19, 46);
//    graph.add_edge(46, 19);
//    graph.add_edge(46, 40);
//    graph.add_edge(40, 46);
//    graph.add_edge(46, 18);
//    graph.add_edge(18, 46);
//    graph.add_edge(25, 47);
//    graph.add_edge(47, 25);
//    graph.add_edge(16, 48);
//    graph.add_edge(48, 16);
//    graph.add_edge(48, 38);
//    graph.add_edge(38, 48);
//    graph.add_edge(30, 49);
//    graph.add_edge(49, 30);
//    graph.add_edge(49, 37);
//    graph.add_edge(37, 49);
//    graph.add_edge(49, 33);
//    graph.add_edge(33, 49);
//    graph.add_edge(49, 0);
//    graph.add_edge(0, 49);
//    graph.add_edge(49, 3);
//    graph.add_edge(3, 49);
//    graph.add_edge(49, 7);
//    graph.add_edge(7, 49);
//    graph.add_edge(49, 2);
//    graph.add_edge(2, 49);
//    graph.add_edge(49, 50);
//    graph.add_edge(50, 49);
//    graph.add_edge(50, 7);
//    graph.add_edge(7, 50);
//    graph.add_edge(50, 37);
//    graph.add_edge(37, 50);
//    graph.add_edge(44, 51);
//    graph.add_edge(51, 44);
//    graph.add_edge(51, 10);
//    graph.add_edge(10, 51);
//    graph.add_edge(51, 23);
//    graph.add_edge(23, 51);
//    graph.add_edge(51, 35);
//    graph.add_edge(35, 51);
//    graph.add_edge(51, 15);
//    graph.add_edge(15, 51);
//    graph.add_edge(21, 52);
//    graph.add_edge(52, 21);
//    graph.add_edge(52, 42);
//    graph.add_edge(42, 52);
//    graph.add_edge(52, 35);
//    graph.add_edge(35, 52);
//    graph.add_edge(52, 29);
//    graph.add_edge(29, 52);
//    graph.add_edge(52, 28);
//    graph.add_edge(28, 52);
//    graph.add_edge(52, 27);
//    graph.add_edge(27, 52);
//    graph.add_edge(52, 0);
//    graph.add_edge(0, 52);
//    graph.add_edge(52, 10);
//    graph.add_edge(10, 52);
//    graph.add_edge(52, 15);
//    graph.add_edge(15, 52);
//    graph.add_edge(52, 9);
//    graph.add_edge(9, 52);
//    graph.add_edge(7, 53);
//    graph.add_edge(53, 7);
//    graph.add_edge(53, 49);
//    graph.add_edge(49, 53);
//    graph.add_edge(53, 12);
//    graph.add_edge(12, 53);
//    graph.add_edge(18, 54);
//    graph.add_edge(54, 18);
//    graph.add_edge(54, 40);
//    graph.add_edge(40, 54);
//    graph.add_edge(54, 39);
//    graph.add_edge(39, 54);
//    graph.add_edge(54, 28);
//    graph.add_edge(28, 54);
//    graph.add_edge(54, 9);
//    graph.add_edge(9, 54);
//    graph.add_edge(48, 55);
//    graph.add_edge(55, 48);
//    graph.add_edge(55, 38);
//    graph.add_edge(38, 55);
//    graph.add_edge(55, 16);
//    graph.add_edge(16, 55);
//    graph.add_edge(8, 56);
//    graph.add_edge(56, 8);
//    graph.add_edge(56, 17);
//    graph.add_edge(17, 56);
//    graph.add_edge(56, 12);
//    graph.add_edge(12, 56);
//    graph.add_edge(48, 57);
//    graph.add_edge(57, 48);
//    graph.add_edge(57, 38);
//    graph.add_edge(38, 57);
//    graph.add_edge(57, 16);
//    graph.add_edge(16, 57);
//    graph.add_edge(27, 58);
//    graph.add_edge(58, 27);
//    graph.add_edge(58, 35);
//    graph.add_edge(35, 58);
//    graph.add_edge(58, 33);
//    graph.add_edge(33, 58);
//    graph.add_edge(58, 3);
//    graph.add_edge(3, 58);
//    graph.add_edge(58, 10);
//    graph.add_edge(10, 58);
//    graph.add_edge(58, 9);
//    graph.add_edge(9, 58);
//    graph.add_edge(58, 23);
//    graph.add_edge(23, 58);
//    graph.add_edge(9, 59);
//    graph.add_edge(59, 9);
//    graph.add_edge(59, 58);
//    graph.add_edge(58, 59);
//    graph.add_edge(59, 54);
//    graph.add_edge(54, 59);
//    graph.add_edge(59, 52);
//    graph.add_edge(52, 59);
//    graph.add_edge(59, 42);
//    graph.add_edge(42, 59);
//    graph.add_edge(59, 39);
//    graph.add_edge(39, 59);
//    graph.add_edge(59, 36);
//    graph.add_edge(36, 59);
//    graph.add_edge(59, 35);
//    graph.add_edge(35, 59);
//    graph.add_edge(59, 27);
//    graph.add_edge(27, 59);
//    graph.add_edge(59, 23);
//    graph.add_edge(23, 59);
//    graph.add_edge(59, 21);
//    graph.add_edge(21, 59);
//    graph.add_edge(59, 20);
//    graph.add_edge(20, 59);
//    graph.add_edge(59, 19);
//    graph.add_edge(19, 59);
//    graph.add_edge(59, 18);
//    graph.add_edge(18, 59);
//    graph.add_edge(59, 11);
//    graph.add_edge(11, 59);
//    graph.add_edge(59, 10);
//    graph.add_edge(10, 59);
//    graph.add_edge(59, 1);
//    graph.add_edge(1, 59);
//    graph.add_edge(59, 4);
//    graph.add_edge(4, 59);
//    graph.add_edge(59, 0);
//    graph.add_edge(0, 59);
//    graph.add_edge(4, 60);
//    graph.add_edge(60, 4);
//    graph.add_edge(60, 40);
//    graph.add_edge(40, 60);
//    graph.add_edge(60, 36);
//    graph.add_edge(36, 60);
//    graph.add_edge(60, 29);
//    graph.add_edge(29, 60);
//    graph.add_edge(60, 28);
//    graph.add_edge(28, 60);
//    graph.add_edge(60, 9);
//    graph.add_edge(9, 60);
//    graph.add_edge(60, 6);
//    graph.add_edge(6, 60);
//    graph.add_edge(60, 1);
//    graph.add_edge(1, 60);
//    graph.add_edge(7, 61);
//    graph.add_edge(61, 7);
//    graph.add_edge(61, 53);
//    graph.add_edge(53, 61);
//    graph.add_edge(61, 50);
//    graph.add_edge(50, 61);
//    graph.add_edge(61, 49);
//    graph.add_edge(49, 61);
//    graph.add_edge(61, 8);
//    graph.add_edge(8, 61);
//    graph.add_edge(61, 2);
//    graph.add_edge(2, 61);
//    graph.add_edge(37, 62);
//    graph.add_edge(62, 37);
//    graph.add_edge(62, 50);
//    graph.add_edge(50, 62);
//    graph.add_edge(62, 12);
//    graph.add_edge(12, 62);
//    graph.add_edge(62, 26);
//    graph.add_edge(26, 62);
//    graph.add_edge(47, 63);
//    graph.add_edge(63, 47);
//    graph.add_edge(11, 64);
//    graph.add_edge(64, 11);
//    graph.add_edge(64, 40);
//    graph.add_edge(40, 64);
//    graph.add_edge(64, 20);
//    graph.add_edge(20, 64);
//    graph.add_edge(64, 0);
//    graph.add_edge(0, 64);
//    graph.add_edge(64, 9);
//    graph.add_edge(9, 64);
//    graph.add_edge(22, 65);
//    graph.add_edge(65, 22);
//    graph.add_edge(65, 38);
//    graph.add_edge(38, 65);
//    graph.add_edge(65, 16);
//    graph.add_edge(16, 65);
//    graph.add_edge(13, 66);
//    graph.add_edge(66, 13);
//    graph.add_edge(66, 41);
//    graph.add_edge(41, 66);
//    graph.add_edge(66, 30);
//    graph.add_edge(30, 66);
//    graph.add_edge(66, 26);
//    graph.add_edge(26, 66);
//    graph.add_edge(66, 17);
//    graph.add_edge(17, 66);
//    graph.add_edge(66, 2);
//    graph.add_edge(2, 66);
//    graph.add_edge(66, 12);
//    graph.add_edge(12, 66);
//    graph.add_edge(10, 67);
//    graph.add_edge(67, 10);
//    graph.add_edge(67, 59);
//    graph.add_edge(59, 67);
//    graph.add_edge(67, 51);
//    graph.add_edge(51, 67);
//    graph.add_edge(67, 27);
//    graph.add_edge(27, 67);
//    graph.add_edge(67, 23);
//    graph.add_edge(23, 67);
//    graph.add_edge(67, 15);
//    graph.add_edge(15, 67);
//    graph.add_edge(67, 9);
//    graph.add_edge(9, 67);
//    graph.add_edge(67, 5);
//    graph.add_edge(5, 67);
//    graph.add_edge(17, 68);
//    graph.add_edge(68, 17);
//    graph.add_edge(68, 56);
//    graph.add_edge(56, 68);
//    graph.add_edge(68, 37);
//    graph.add_edge(37, 68);
//    graph.add_edge(68, 8);
//    graph.add_edge(8, 68);
//    graph.add_edge(40, 69);
//    graph.add_edge(69, 40);
//    graph.add_edge(69, 60);
//    graph.add_edge(60, 69);
//    graph.add_edge(69, 46);
//    graph.add_edge(46, 69);
//    graph.add_edge(69, 42);
//    graph.add_edge(42, 69);
//    graph.add_edge(69, 18);
//    graph.add_edge(18, 69);
//    graph.add_edge(69, 15);
//    graph.add_edge(15, 69);
//    graph.add_edge(69, 4);
//    graph.add_edge(4, 69);
//    graph.add_edge(9, 70);
//    graph.add_edge(70, 9);
//    graph.add_edge(70, 64);
//    graph.add_edge(64, 70);
//    graph.add_edge(70, 60);
//    graph.add_edge(60, 70);
//    graph.add_edge(70, 59);
//    graph.add_edge(59, 70);
//    graph.add_edge(70, 58);
//    graph.add_edge(58, 70);
//    graph.add_edge(70, 42);
//    graph.add_edge(42, 70);
//    graph.add_edge(70, 39);
//    graph.add_edge(39, 70);
//    graph.add_edge(70, 35);
//    graph.add_edge(35, 70);
//    graph.add_edge(70, 29);
//    graph.add_edge(29, 70);
//    graph.add_edge(70, 28);
//    graph.add_edge(28, 70);
//    graph.add_edge(70, 21);
//    graph.add_edge(21, 70);
//    graph.add_edge(70, 20);
//    graph.add_edge(20, 70);
//    graph.add_edge(70, 18);
//    graph.add_edge(18, 70);
//    graph.add_edge(70, 15);
//    graph.add_edge(15, 70);
//    graph.add_edge(70, 11);
//    graph.add_edge(11, 70);
//    graph.add_edge(70, 10);
//    graph.add_edge(10, 70);
//    graph.add_edge(70, 1);
//    graph.add_edge(1, 70);
//    graph.add_edge(70, 3);
//    graph.add_edge(3, 70);
//    graph.add_edge(70, 4);
//    graph.add_edge(4, 70);
//    graph.add_edge(70, 5);
//    graph.add_edge(5, 70);
//    graph.add_edge(70, 71);
//    graph.add_edge(71, 70);
//    graph.add_edge(71, 1);
//    graph.add_edge(1, 71);
//    graph.add_edge(71, 15);
//    graph.add_edge(15, 71);
//    graph.add_edge(71, 29);
//    graph.add_edge(29, 71);
//    graph.add_edge(71, 35);
//    graph.add_edge(35, 71);
//    graph.add_edge(71, 39);
//    graph.add_edge(39, 71);
//    graph.add_edge(71, 64);
//    graph.add_edge(64, 71);
//    graph.add_edge(71, 9);
//    graph.add_edge(9, 71);
//    graph.add_edge(17, 72);
//    graph.add_edge(72, 17);
//    graph.add_edge(72, 66);
//    graph.add_edge(66, 72);
//    graph.add_edge(72, 26);
//    graph.add_edge(26, 72);
//    graph.add_edge(71, 73);
//    graph.add_edge(73, 71);
//    graph.add_edge(73, 9);
//    graph.add_edge(9, 73);
//    graph.add_edge(73, 64);
//    graph.add_edge(64, 73);
//    graph.add_edge(73, 29);
//    graph.add_edge(29, 73);
//    graph.add_edge(11, 74);
//    graph.add_edge(74, 11);
//    graph.add_edge(74, 32);
//    graph.add_edge(32, 74);
//    graph.add_edge(74, 28);
//    graph.add_edge(28, 74);
//    graph.add_edge(74, 16);
//    graph.add_edge(16, 74);
//    graph.add_edge(74, 5);
//    graph.add_edge(5, 74);
//    graph.add_edge(74, 9);
//    graph.add_edge(9, 74);
//    graph.add_edge(23, 75);
//    graph.add_edge(75, 23);
//    graph.add_edge(75, 67);
//    graph.add_edge(67, 75);
//    graph.add_edge(75, 59);
//    graph.add_edge(59, 75);
//    graph.add_edge(75, 51);
//    graph.add_edge(51, 75);
//    graph.add_edge(75, 44);
//    graph.add_edge(44, 75);
//    graph.add_edge(75, 9);
//    graph.add_edge(9, 75);
//    graph.add_edge(75, 21);
//    graph.add_edge(21, 75);
//    graph.add_edge(31, 76);
//    graph.add_edge(76, 31);
//    graph.add_edge(76, 12);
//    graph.add_edge(12, 76);
//    graph.add_edge(76, 8);
//    graph.add_edge(8, 76);
//    graph.add_edge(54, 77);
//    graph.add_edge(77, 54);
//    graph.add_edge(77, 28);
//    graph.add_edge(28, 77);
//    graph.add_edge(77, 39);
//    graph.add_edge(39, 77);
//    graph.add_edge(77, 18);
//    graph.add_edge(18, 77);
//    graph.add_edge(68, 78);
//    graph.add_edge(78, 68);
//    graph.add_edge(78, 56);
//    graph.add_edge(56, 78);
//    graph.add_edge(78, 17);
//    graph.add_edge(17, 78);
//    graph.add_edge(66, 79);
//    graph.add_edge(79, 66);
//    graph.add_edge(79, 72);
//    graph.add_edge(72, 79);
//    graph.add_edge(79, 17);
//    graph.add_edge(17, 79);
//    graph.add_edge(79, 30);
//    graph.add_edge(30, 79);
//    graph.add_edge(79, 41);
//    graph.add_edge(41, 79);
//    graph.add_edge(23, 80);
//    graph.add_edge(80, 23);
//    graph.add_edge(80, 67);
//    graph.add_edge(67, 80);
//    graph.add_edge(80, 59);
//    graph.add_edge(59, 80);
//    graph.add_edge(80, 35);
//    graph.add_edge(35, 80);
//    graph.add_edge(80, 20);
//    graph.add_edge(20, 80);
//    graph.add_edge(80, 3);
//    graph.add_edge(3, 80);
//    graph.add_edge(80, 21);
//    graph.add_edge(21, 80);
//    graph.add_edge(2, 81);
//    graph.add_edge(81, 2);
//    graph.add_edge(81, 66);
//    graph.add_edge(66, 81);
//    graph.add_edge(81, 61);
//    graph.add_edge(61, 81);
//    graph.add_edge(81, 45);
//    graph.add_edge(45, 81);
//    graph.add_edge(81, 33);
//    graph.add_edge(33, 81);
//    graph.add_edge(81, 13);
//    graph.add_edge(13, 81);
//    graph.add_edge(81, 8);
//    graph.add_edge(8, 81);
//    graph.add_edge(81, 3);
//    graph.add_edge(3, 81);
//    graph.add_edge(81, 0);
//    graph.add_edge(0, 81);
//    graph.add_edge(50, 82);
//    graph.add_edge(82, 50);
//    graph.add_edge(82, 62);
//    graph.add_edge(62, 82);
//    graph.add_edge(82, 61);
//    graph.add_edge(61, 82);
//    graph.add_edge(82, 49);
//    graph.add_edge(49, 82);
//    graph.add_edge(62, 83);
//    graph.add_edge(83, 62);
//    graph.add_edge(83, 82);
//    graph.add_edge(82, 83);
//    graph.add_edge(83, 26);
//    graph.add_edge(26, 83);
//    graph.add_edge(83, 12);
//    graph.add_edge(12, 83);
//    graph.add_edge(83, 50);
//    graph.add_edge(50, 83);
//    graph.add_edge(62, 84);
//    graph.add_edge(84, 62);
//    graph.add_edge(84, 83);
//    graph.add_edge(83, 84);
//    graph.add_edge(84, 26);
//    graph.add_edge(26, 84);
//    graph.add_edge(84, 12);
//    graph.add_edge(12, 84);
//    graph.add_edge(84, 37);
//    graph.add_edge(37, 84);
//    graph.add_edge(42, 85);
//    graph.add_edge(85, 42);
//    graph.add_edge(85, 52);
//    graph.add_edge(52, 85);
//    graph.add_edge(85, 9);
//    graph.add_edge(9, 85);
//    graph.add_edge(85, 20);
//    graph.add_edge(20, 85);
//    graph.add_edge(85, 40);
//    graph.add_edge(40, 85);
//    graph.add_edge(18, 86);
//    graph.add_edge(86, 18);
//    graph.add_edge(86, 77);
//    graph.add_edge(77, 86);
//    graph.add_edge(86, 54);
//    graph.add_edge(54, 86);
//    graph.add_edge(86, 46);
//    graph.add_edge(46, 86);
//    graph.add_edge(86, 32);
//    graph.add_edge(32, 86);
//    graph.add_edge(86, 9);
//    graph.add_edge(9, 86);
//    graph.add_edge(86, 0);
//    graph.add_edge(0, 86);
//    graph.add_edge(62, 87);
//    graph.add_edge(87, 62);
//    graph.add_edge(87, 84);
//    graph.add_edge(84, 87);
//    graph.add_edge(87, 82);
//    graph.add_edge(82, 87);
//    graph.add_edge(87, 12);
//    graph.add_edge(12, 87);
//    graph.add_edge(82, 88);
//    graph.add_edge(88, 82);
//    graph.add_edge(88, 87);
//    graph.add_edge(87, 88);
//    graph.add_edge(44, 89);
//}

int main(int argc, char **argv) {
    testing::InitGoogleTest(&argc, argv);
    return RUN_ALL_TESTS();
}